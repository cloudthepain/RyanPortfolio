@page "/people"

<PageTitle>People</PageTitle>

@using DataAccessLibrary
@using RyanPortfolio.Models
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config;


<h3>People</h3>

<button class="btn btn-primary" @onclick="InsertData">Click me</button>
<button class="btn btn-primary" @onclick="UpdateData">Click me</button>
<button class="btn btn-primary" @onclick="DeleteData">Click me</button>

@if(people == null)
{
	<p><em>Loading...</em></p>
}
else
{
	@foreach(var p in people)
	{
		<p>@p.firstName @p.lastName</p>
	}
}

@code {

	List<PersonModel> people;

	private async Task InsertData()
	{
		string sql = "insert into people (FirstName, LastName) values (@firstName, @lastName);";

		await _data.SaveData(sql, new { FirstName = "Aname", LastName = "Dawn" }, _config.GetConnectionString("default"));
		
		await OnInitializedAsync();
	}

	private async Task UpdateData()
	{
		string sql = "Update people set FirstName=@firstName where LastName=@lastName";

		await _data.SaveData(sql, new { FirstName = "Dawn", LastName = "Dawn" }, _config.GetConnectionString("default"));

		await OnInitializedAsync();
	}

	private async Task DeleteData()
	{
		string sql = "Delete from people where LastName=@lastName";

		await _data.SaveData(sql, new { LastName = "Dawn" }, _config.GetConnectionString("default"));

		await OnInitializedAsync();
	}

	protected override async Task OnInitializedAsync()
	{
		string sql = "select * from people";

		people = await _data.LoadData<PersonModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
	}
}
